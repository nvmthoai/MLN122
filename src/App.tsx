import React from "react";
import { useEffect, useState } from "react";

function SectionCard({
  title,
  children,
  delay = 0,
}: {
  title: string;
  children: React.ReactNode;
  delay?: number;
}) {
  const delayClass = `fade-delay-${delay}`;
  return (
    <article
      className={`bg-white/80 backdrop-blur-sm p-6 rounded-2xl shadow-lg border border-white/30 transition-transform duration-300 card-hover fade-up ${delayClass}`}
    >
      <h3 className="text-xl font-semibold text-slate-800 mb-3">{title}</h3>
      <div className="text-slate-700 prose prose-slate prose-custom">
        {children}
      </div>
    </article>
  );
}

export default function App() {
  const [mounted, setMounted] = useState(false);
  useEffect(() => {
    const t = setTimeout(() => setMounted(true), 60);
    return () => clearTimeout(t);
  }, []);

  // quiz state
  const [answer, setAnswer] = useState<string | null>(null);
  const [showHint, setShowHint] = useState(false);

  function handleAnswer(a: string) {
    setAnswer(a);
    setShowHint(true);
    setTimeout(() => setShowHint(false), 2200);
  }

  return (
    <div
      className={`${
        mounted ? "is-mounted" : ""
      } min-h-screen site-hero relative overflow-hidden py-20 px-6 sm:px-8 lg:px-16`}
    >
      {/* decorative blobs */}
      <svg
        className="absolute -left-16 -top-16 w-96 h-96 blob floaty"
        viewBox="0 0 200 200"
        xmlns="http://www.w3.org/2000/svg"
        aria-hidden
      >
        <defs>
          <linearGradient id="g1" x1="0" x2="1">
            <stop offset="0" stopColor="#0ea5a4" />
            <stop offset="1" stopColor="#3b82f6" />
          </linearGradient>
        </defs>
        <path
          fill="url(#g1)"
          d="M42.8,-63.6C58.9,-56.6,75.7,-46.3,82.7,-31.1C89.7,-15.9,86.8,4.1,78.4,24.2C69.9,44.3,55.8,64.3,35.5,72.2C15.1,80.1,-11.8,75.8,-32.5,64.1C-53.1,52.5,-67.5,33.6,-70.9,12.8C-74.3,-8,-66.8,-30.7,-51.2,-39.8C-35.5,-48.9,-11.8,-44.4,8.9,-48.6C29.6,-52.9,48.1,-67.2,42.8,-63.6Z"
          transform="translate(100 100)"
        />
      </svg>

      <div className="max-w-6xl mx-auto relative z-10">
        <header className="flex items-center justify-between mb-10">
          <div className="flex items-center gap-4">
            <div className="w-12 h-12 rounded-lg decor-accent flex items-center justify-center text-white font-bold shadow-md">
              ML
            </div>
            <div>
              <h1 className="text-2xl sm:text-3xl font-extrabold text-slate-900 gradient-text">
                Ch∆∞∆°ng 4 ‚Äî C·∫°nh tranh v√† ƒë·ªôc quy·ªÅn
              </h1>
              <p className="text-sm text-slate-600 mt-1">
                Trong n·ªÅn kinh t·∫ø th·ªã tr∆∞·ªùng ‚Äî n·ªôi dung m√¥n MacLenin
              </p>
            </div>
          </div>

          <nav className="text-sm text-slate-600 hidden md:flex gap-6">
            <a href="#key" className="hover:text-slate-900">
              Kh√°i ni·ªám
            </a>
            <a href="#reasons" className="hover:text-slate-900">
              Nguy√™n nh√¢n
            </a>
            <a href="#state" className="hover:text-slate-900">
              ƒê·ªôc quy·ªÅn nh√† n∆∞·ªõc
            </a>
          </nav>
        </header>

        <main className="grid grid-cols-1 lg:grid-cols-3 gap-8 items-start">
          <section className="lg:col-span-2">
            <div className="bg-gradient-to-b from-white to-slate-50 p-8 rounded-3xl shadow-xl border border-white/40">
              {/* HERO */}
              <div className="mb-6">
                <div className="rounded-xl p-6 bg-gradient-to-r from-white to-transparent border border-white/30 shadow-sm">
                  <h2 className="text-4xl md:text-5xl font-extrabold gradient-text leading-tight">
                    C·∫†NH TRANH V√Ä ƒê·ªòC QUY·ªÄN
                  </h2>
                  <p className="mt-2 text-sm text-slate-700">
                    Ch∆∞∆°ng 4 ‚Äî Tri·∫øt h·ªçc M√°c‚ÄìL√™nin ‚Ä¢ Tinh th·∫ßn: m√¢u thu·∫´n nh∆∞ng
                    th·ªëng nh·∫•t
                  </p>
                  <blockquote className="mt-6 italic font-medium text-slate-800 text-lg prose-custom">
                    ‚ÄúC·∫°nh tranh v√† ƒë·ªôc quy·ªÅn l√† hai m·∫∑t song song trong s·ª± ph√°t
                    tri·ªÉn c·ªßa kinh t·∫ø th·ªã tr∆∞·ªùng.‚Äù
                  </blockquote>
                </div>
                {/* subtle gears background (SVG) */}
                <div className="mt-4 pointer-events-none opacity-60">
                  <svg
                    className="w-full h-28"
                    viewBox="0 0 1200 120"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <defs>
                      <linearGradient id="g2" x1="0" x2="1">
                        <stop offset="0" stopColor="#ffe9d6" />
                        <stop offset="1" stopColor="#ffd54f" />
                      </linearGradient>
                    </defs>
                    <g transform="translate(0,10)" fill="url(#g2)">
                      <circle cx="80" cy="60" r="18" />
                      <g transform="translate(260,30) rotate(0)">
                        <path
                          d="M0 0c12 0 22 10 22 22s-10 22-22 22-22-10-22-22S-12 0 0 0z"
                          opacity="0.15"
                        />
                      </g>
                    </g>
                  </svg>
                </div>
              </div>

              <h3 className="text-2xl font-bold text-slate-900 mb-4 fade-up fade-delay-1">
                T√≥m t·∫Øt n·ªôi dung
              </h3>
              <p className="text-slate-700 mb-6 fade-up fade-delay-2">
                B√†i vi·∫øt tr√¨nh b√†y b·∫£n ch·∫•t c·∫°nh tranh, nguy√™n nh√¢n d·∫´n t·ªõi ƒë·ªôc
                quy·ªÅn, h√¨nh th√°i ƒë·ªôc quy·ªÅn nh√† n∆∞·ªõc v√† t√°c ƒë·ªông hai m·∫∑t c·ªßa ƒë·ªôc
                quy·ªÅn trong n·ªÅn kinh t·∫ø th·ªã tr∆∞·ªùng ƒë·ªãnh h∆∞·ªõng x√£ h·ªôi ch·ªß nghƒ©a.
              </p>

              <SectionCard title="Kh√°i ni·ªám c∆° b·∫£n" delay={1}>
                <ul className="space-y-2">
                  <li>
                    ‚Ä¢ <strong>C·∫°nh tranh</strong>: S·ª± ganh ƒëua gi·ªØa c√°c ch·ªß th·ªÉ
                    kinh t·∫ø nh·∫±m gi√†nh th·ªã ph·∫ßn, l·ª£i nhu·∫≠n v√† ngu·ªìn l·ª±c.
                  </li>
                  <li>
                    ‚Ä¢ <strong>ƒê·ªôc quy·ªÅn</strong>: Khi m·ªôt ho·∫∑c m·ªôt nh√≥m doanh
                    nghi·ªáp ki·ªÉm so√°t ph·∫ßn l·ªõn th·ªã tr∆∞·ªùng, ·∫£nh h∆∞·ªüng ƒë·∫øn gi√° c·∫£
                    v√† ngu·ªìn cung.
                  </li>
                </ul>
              </SectionCard>

              <div className="mt-6 grid gap-6">
                <SectionCard title="Nguy√™n nh√¢n h√¨nh th√†nh ƒë·ªôc quy·ªÅn" delay={2}>
                  <ol className="list-decimal pl-5 space-y-2">
                    <li>
                      Ph√°t tri·ªÉn l·ª±c l∆∞·ª£ng s·∫£n xu·∫•t: xu·∫•t hi·ªán doanh nghi·ªáp quy
                      m√¥ l·ªõn, c√¥ng ngh·ªá cao.
                    </li>
                    <li>
                      C·∫°nh tranh gay g·∫Øt: doanh nghi·ªáp nh·ªè b·ªã lo·∫°i, s√°p nh·∫≠p
                      th√†nh doanh nghi·ªáp l·ªõn.
                    </li>
                    <li>
                      Kh·ªßng ho·∫£ng kinh t·∫ø v√† h·ªá th·ªëng t√≠n d·ª•ng: t·∫≠p trung t∆∞ b·∫£n
                      qua mua l·∫°i, h·ª£p nh·∫•t.
                    </li>
                  </ol>
                </SectionCard>

                <SectionCard title="ƒê·ªôc quy·ªÅn nh√† n∆∞·ªõc" delay={3}>
                  <p>
                    ƒê√¢y l√† m√¥ h√¨nh khi Nh√† n∆∞·ªõc n·∫Øm gi·ªØ ho·∫∑c ph·ªëi h·ª£p v·ªõi c√°c
                    t·∫≠p ƒëo√†n ƒë·ªÉ chi ph·ªëi c√°c ng√†nh then ch·ªët, ƒë·∫£m b·∫£o ·ªïn ƒë·ªãnh v√†
                    ph√°t tri·ªÉn chi·∫øn l∆∞·ª£c (v√≠ d·ª•: ƒëi·ªán l·ª±c, ƒë∆∞·ªùng s·∫Øt, d·∫ßu kh√≠).
                  </p>
                </SectionCard>
              </div>
            </div>
          </section>

          <aside className="space-y-6">
            {/* Section 1 cards (ƒê·ªïi m·ªõi, NƒÉng su·∫•t, TƒÉng tr∆∞·ªüng) */}
            <div className="p-6 rounded-2xl bg-white/95 shadow-lg border border-white/30 fade-up fade-delay-1">
              <h4 className="text-lg font-semibold text-slate-800 mb-4">
                B·∫£n ch·∫•t: ƒê·ªông l·ª±c c·ªßa c·∫°nh tranh
              </h4>
              <div className="grid grid-cols-1 gap-4 sm:grid-cols-3">
                <div className="p-4 rounded-xl bg-white card-3d card-hover">
                  <div className="text-2xl mb-2">üí°</div>
                  <div className="font-semibold">ƒê·ªïi m·ªõi</div>
                  <div className="text-sm text-slate-600">
                    S√°ng t·∫°o c√¥ng ngh·ªá v√† m√¥ h√¨nh kinh doanh.
                  </div>
                </div>
                <div className="p-4 rounded-xl bg-white card-3d card-hover">
                  <div className="text-2xl mb-2">‚öôÔ∏è</div>
                  <div className="font-semibold">NƒÉng su·∫•t</div>
                  <div className="text-sm text-slate-600">
                    T·ªëi ∆∞u h√≥a quy tr√¨nh v√† chi ph√≠.
                  </div>
                </div>
                <div className="p-4 rounded-xl bg-white card-3d card-hover">
                  <div className="text-2xl mb-2">üìà</div>
                  <div className="font-semibold">TƒÉng tr∆∞·ªüng</div>
                  <div className="text-sm text-slate-600">
                    M·ªü r·ªông th·ªã ph·∫ßn, n√¢ng cao m·ª©c s·ªëng.
                  </div>
                </div>
              </div>
            </div>

            {/* Timeline: S·ª± h√¨nh th√†nh ƒë·ªôc quy·ªÅn */}
            <div className="p-6 rounded-2xl bg-gradient-to-b from-white to-gray-50 shadow-lg border border-white/30 fade-up fade-delay-2">
              <h4 className="text-lg font-semibold text-slate-800 mb-4">
                S·ª± h√¨nh th√†nh ƒë·ªôc quy·ªÅn
              </h4>
              <div className="overflow-x-auto timeline -mx-4 px-4 py-2 flex gap-6">
                {[
                  [
                    "Ph√°t tri·ªÉn l·ª±c l∆∞·ª£ng s·∫£n xu·∫•t",
                    "Khoa h·ªçc-k·ªπ thu·∫≠t, t·∫≠p trung v·ªën",
                  ],
                  [
                    "C·∫°nh tranh gay g·∫Øt",
                    "Doanh nghi·ªáp nh·ªè b·ªã lo·∫°i ho·∫∑c s√°p nh·∫≠p",
                  ],
                  [
                    "Kh·ªßng ho·∫£ng kinh t·∫ø",
                    "Mua l·∫°i, h·ª£p nh·∫•t, t·∫≠p trung t∆∞ b·∫£n",
                  ],
                  [
                    "H√¨nh th√†nh ƒë·ªôc quy·ªÅn",
                    "Doanh nghi·ªáp l·ªõn ki·ªÉm so√°t th·ªã tr∆∞·ªùng",
                  ],
                ].map((it, idx) => (
                  <div
                    key={idx}
                    className="min-w-[220px] p-4 rounded-2xl bg-white/95 shadow-sm timeline-item"
                  >
                    <div className="font-semibold text-sm mb-2">{it[0]}</div>
                    <div className="text-xs text-slate-600">{it[1]}</div>
                  </div>
                ))}
              </div>
            </div>

            {/* Monopoly State infographic */}
            <div className="p-6 rounded-2xl bg-red-900/6 shadow-lg border border-white/10 fade-up fade-delay-3">
              <h4 className="text-lg font-semibold text-slate-800 mb-4">
                ƒê·ªôc quy·ªÅn nh√† n∆∞·ªõc
              </h4>
              <div className="rounded-lg p-4 bg-gradient-to-b from-red-50 to-white">
                <svg viewBox="0 0 300 160" className="w-full h-40">
                  <defs>
                    <linearGradient id="rg" x1="0" x2="1">
                      <stop offset="0" stopColor="#C62828" />
                      <stop offset="1" stopColor="#FFD54F" />
                    </linearGradient>
                  </defs>
                  {/* nodes */}
                  <line
                    x1="150"
                    y1="20"
                    x2="80"
                    y2="80"
                    stroke="#C62828"
                    strokeWidth="2"
                    opacity="0.6"
                  />
                  <line
                    x1="150"
                    y1="20"
                    x2="220"
                    y2="80"
                    stroke="#C62828"
                    strokeWidth="2"
                    opacity="0.6"
                  />
                  <circle cx="150" cy="20" r="14" fill="url(#rg)" />
                  <circle
                    cx="80"
                    cy="80"
                    r="10"
                    fill="#C62828"
                    className="net-node"
                  />
                  <circle
                    cx="220"
                    cy="80"
                    r="10"
                    fill="#C62828"
                    className="net-node"
                  />
                  <text
                    x="150"
                    y="18"
                    textAnchor="middle"
                    fontSize="9"
                    fill="#fff"
                    fontFamily="Montserrat"
                  >
                    NH√Ä N∆Ø·ªöC
                  </text>
                </svg>
                <div className="mt-3 text-sm text-slate-700">
                  M·ªëi quan h·ªá ƒëi·ªÅu ti·∫øt: Nh√† n∆∞·ªõc ‚Üî Doanh nghi·ªáp ‚Üî Nh√¢n d√¢n
                </div>
              </div>
            </div>

            {/* Interactive quiz prompt */}
            <div className="p-6 rounded-2xl bg-white/95 shadow-lg border border-white/30 fade-up fade-delay-1">
              <h4 className="text-lg font-semibold text-slate-800 mb-3">
                B√†i h·ªçc t∆∞ duy ‚Äî H·ªèi & ƒê√°p
              </h4>
              <div className="text-sm text-slate-700 mb-3">
                N·∫øu m·ªôt doanh nghi·ªáp ki·ªÉm so√°t to√†n b·ªô th·ªã tr∆∞·ªùng, ƒëi·ªÅu g√¨ s·∫Ω
                x·∫£y ra v·ªõi ng∆∞·ªùi ti√™u d√πng?
              </div>
              <div className="grid gap-3">
                {[
                  ["Gi√° gi·∫£m nh·ªù quy m√¥", "Kh√¥ng ƒë√∫ng"],
                  ["Gi√° tƒÉng do thi·∫øu c·∫°nh tranh", "ƒê√∫ng"],
                  ["Ch·∫•t l∆∞·ª£ng lu√¥n ƒë∆∞·ª£c c·∫£i thi·ªán", "Kh√¥ng ch·∫Øc"],
                ].map((o, i) => (
                  <button
                    key={i}
                    onClick={() => handleAnswer(o[1])}
                    className={`quiz-option text-left p-3 rounded-lg border ${
                      answer === o[1]
                        ? "bg-red-50 border-red-300"
                        : "bg-white border-gray-100"
                    }`}
                  >
                    <div className="font-medium">{o[0]}</div>
                  </button>
                ))}
              </div>
              {showHint && (
                <div className="mt-3 text-sm text-slate-800 p-3 rounded-md bg-yellow-50 border border-yellow-200">
                  ƒê√°p √°n: {answer}
                </div>
              )}
            </div>
          </aside>
        </main>
        {/* Split panel: T√°c ƒë·ªông c·ªßa ƒë·ªôc quy·ªÅn (positive vs negative) */}
        <section className="mt-10 fade-up fade-delay-2">
          <div className="split-panel">
            <div className="split-left">
              <h4 className="text-lg font-semibold text-slate-800">
                T√°c ƒë·ªông t√≠ch c·ª±c ‚úÖ
              </h4>
              <ul className="mt-3 text-slate-700 list-disc pl-5 space-y-2">
                <li>Th√∫c ƒë·∫©y nghi√™n c·ª©u & ph√°t tri·ªÉn, ƒë·ªïi m·ªõi c√¥ng ngh·ªá.</li>
                <li>
                  TƒÉng nƒÉng su·∫•t lao ƒë·ªông, n√¢ng cao nƒÉng l·ª±c c·∫°nh tranh qu·ªëc
                  gia.
                </li>
                <li>
                  T·∫°o l·ª£i th·∫ø cho c√°c ng√†nh chi·∫øn l∆∞·ª£c (nƒÉng l∆∞·ª£ng, vi·ªÖn th√¥ng).
                </li>
              </ul>
            </div>
            <div className="split-right">
              <h4 className="text-lg font-semibold text-slate-800">
                T√°c ƒë·ªông ti√™u c·ª±c ‚ùå
              </h4>
              <ul className="mt-3 text-slate-700 list-disc pl-5 space-y-2">
                <li>Gi√° c·∫£ b·ªã ƒë·∫©y l√™n do thi·∫øu c·∫°nh tranh.</li>
                <li>K√¨m h√£m s√°ng t·∫°o n·∫øu kh√¥ng c√≥ ƒë·ªëi th·ªß th√∫c ƒë·∫©y.</li>
                <li>Gia tƒÉng b·∫•t b√¨nh ƒë·∫≥ng v√† t·∫≠p trung l·ª£i nhu·∫≠n.</li>
              </ul>
            </div>
          </div>
        </section>

        <footer className="mt-12 text-center text-slate-700 text-sm fade-up fade-delay-3">
          <blockquote
            className="text-xl md:text-2xl font-medium font-serif italic text-slate-800 mb-4"
            style={{ fontFamily: "Playfair Display, serif" }}
          >
            ‚Äúƒê·ªôc quy·ªÅn kh√¥ng x√≥a b·ªè c·∫°nh tranh, m√† ch·ªâ bi·∫øn ƒë·ªïi h√¨nh th·ª©c c·ªßa
            n√≥.‚Äù
          </blockquote>
          <div className="mb-4">
            Nh√≥m: [T√™n nh√≥m] ‚Ä¢ Tr∆∞·ªùng: [T√™n tr∆∞·ªùng] ‚Ä¢ Gi·∫£ng vi√™n h∆∞·ªõng d·∫´n: [T√™n
            GV]
          </div>
          <div className="flex items-center justify-center gap-3">
            <a
              className="px-4 py-2 rounded-md bg-red-700 text-white hover:bg-red-800"
              href="/Ch∆∞∆°ng 4_ C·∫°nh tranh v√† ƒë·ªôc quy·ªÅn trong n·ªÅn kinh t·∫ø th·ªã tr∆∞·ªùng.txt"
              download
            >
              T·∫£i t√†i li·ªáu
            </a>
            <button
              className="px-4 py-2 rounded-md border border-slate-200"
              onClick={() =>
                alert("PDF export ch∆∞a ƒë∆∞·ª£c t√≠ch h·ª£p trong b·∫£n demo n√†y.")
              }
            >
              Xu·∫•t PDF
            </button>
          </div>
        </footer>
      </div>
    </div>
  );
}
